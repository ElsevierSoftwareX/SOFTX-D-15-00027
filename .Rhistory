ca.rows.qlt(smoke,3)
malinvaud <- function(data) {
grandtotal <- sum(data)
nrows <- nrow(data)
ncols <- ncol(data)
numb.dim.cols<-ncol(data)-1
numb.dim.rows<-nrow(data)-1
a <- min(numb.dim.cols, numb.dim.rows) #dimensionality of the table
labs<-c(1:a) #set the number that will be used as x-axis' labels on the scatterplots
res.ca<-CA(data, ncp=a, graph=FALSE)
malinv.test.rows <- a
malinv.test.cols <- 6
malinvt.output <-matrix(ncol= malinv.test.cols, nrow=malinv.test.rows)
colnames(malinvt.output) <- c("K", "Dimension", "Eigen value", "Chi-square", "df", "p value")
malinvt.output[,1] <- c(0:(a-1))
malinvt.output[,2] <- c(1:a)
for(i in 1:malinv.test.rows){
k <- -1+i
malinvt.output[i,3] <- res.ca$eig[i,1]
malinvt.output[i,5] <- (nrows-k-1)*(ncols-k-1)
}
malinvt.output[,4] <- rev(cumsum(rev(malinvt.output[,3])))*grandtotal
malinvt.output[,6] <- round(pchisq(malinvt.output[,4], malinvt.output[,5], lower.tail=FALSE), digits=6)
print(malinvt.output)
plot(malinvt.output[,6], , xaxt="n", xlim=c(1, a), xlab="Dimensions", ylab="p value")
axis(1, at=labs, labels=sprintf("%.0f",labs))
title(main="Malinvaud's test Plot", sub="dashed line: alpha 0.05 threshold", col.sub="RED", cex.sub=0.80)
abline(h=0.05, lty=2, col="RED")
}
malnvaud(smoke)
malinvaud(smoke)
library(CA)
library(FactoMineR)
malinvaud(smoke)
malinvaud <- function(data) {
grandtotal <- sum(data)
nrows <- nrow(data)
ncols <- ncol(data)
numb.dim.cols<-ncol(data)-1
numb.dim.rows<-nrow(data)-1
a <- min(numb.dim.cols, numb.dim.rows) #dimensionality of the table
labs<-c(1:a) #set the number that will be used as x-axis' labels on the scatterplots
res.ca<-CA(data, ncp=a, graph=FALSE)
malinv.test.rows <- a
malinv.test.cols <- 6
malinvt.output <-matrix(ncol= malinv.test.cols, nrow=malinv.test.rows)
colnames(malinvt.output) <- c("K", "Dimension", "Eigen value", "Chi-square", "df", "p value")
malinvt.output[,1] <- c(0:(a-1))
malinvt.output[,2] <- c(1:a)
for(i in 1:malinv.test.rows){
k <- -1+i
malinvt.output[i,3] <- res.ca$eig[i,1]
malinvt.output[i,5] <- (nrows-k-1)*(ncols-k-1)
}
malinvt.output[,4] <- rev(cumsum(rev(malinvt.output[,3])))*grandtotal
malinvt.output[,6] <- round(pchisq(malinvt.output[,4], malinvt.output[,5], lower.tail=FALSE), digits=6)
print(malinvt.output)
dotchart2(malinvt.output[,6], labels=malinvt.output[,2], sort=FALSE,lty=2, xlim=c(min(malinvt.output[,6]), max(malinvt.output[,6])), xlab=paste("p value after Malinvaud's test"), ylab="Dimensions")
abline(v=0.05, lty=2, col="RED")
#plot(malinvt.output[,6], , xaxt="n", xlim=c(1, a), xlab="Dimensions", ylab="p value")
#axis(1, at=labs, labels=sprintf("%.0f",labs))
#title(main="Malinvaud's test Plot", sub="dashed line: alpha 0.05 threshold", col.sub="RED", cex.sub=0.80)
#abline(h=0.05, lty=2, col="RED")
}
malinvaud(smoke)
data("greenacre_data")
malinvaud(greenacre_data)
ca.cols.cntr(greenacre_data,1)
ca.rows.cntr(greenacre_data,1)
ca.rows.cntr <- function (data, num.dim){
nrows <- nrow(data)
cadataframe<-summary(ca(data, nd=num.dim))
counter <- 0
for(i in seq(7, ncol(cadataframe$rows), 3)){
counter <- counter +1
dotchart2(cadataframe$rows[,i], labels=rownames(data), sort=FALSE,lty=2, xlim=c(0.0, 1000), xlab=paste("Row categories' contribution to Dim. ",counter," (in permills)"))
abline(h=round(((100/nrows)*10), digits=0))
}
}
ca.rows.cntr(greenacre_data,1)
ca.cols.cntr <- function (data, num.dim){
ncols <- ncol(data)
cadataframe<-summary(ca(data, nd=num.dim))
counter <- 0
for(i in seq(7, ncol(cadataframe$columns), 3)){
counter <- counter +1
dotchart2(cadataframe$columns[,i], labels=colnames(data), sort=FALSE,lty=2, xlim=c(0.0, 1000), xlab=paste("Column categories' contribution to Dim. ",counter," (in permills)"))
abline(v=round(((100/ncols)*10), digits=0))
}
}
ca.rows.contr(greenacre_data,1)
ca.rows.cntr(greenacre_data,1)
ca.cols.cntr <- function (data, num.dim){
ncols <- ncol(data)
cadataframe<-summary(ca(data, nd=num.dim))
counter <- 0
for(i in seq(7, ncol(cadataframe$columns), 3)){
counter <- counter +1
dotchart2(cadataframe$columns[,i], labels=colnames(data), sort=FALSE,lty=2, xlim=c(0.0, 1000), xlab=paste("Column categories' contribution to Dim. ",counter," (in permills)"))
abline(v=round(((100/ncols)*10), digits=0))
}
}
ca.cols.cntr(greenacre_data,1)
ca.cols.cntr <- function (data, num.dim){
ncols <- ncol(data)
cadataframe<-summary(ca(data, nd=num.dim))
counter <- 0
for(i in seq(7, ncol(cadataframe$columns), 3)){
counter <- counter +1
dotchart2(cadataframe$columns[,i], labels=colnames(data), sort=FALSE,lty=2, xlim=c(0.0, 1000), xlab=paste("Column categories' contribution to Dim. ",counter," (in permills)"))
abline(v=round(((100/ncols)*10), digits=0), lty=2, col="RED")
}
}
ca.cols.cntr(greenacre_data,1)
ca.cols.cntr(greenacre_data,2)
ca.rows.cntr <- function (data, num.dim){
nrows <- nrow(data)
cadataframe<-summary(ca(data, nd=num.dim))
counter <- 0
for(i in seq(7, ncol(cadataframe$rows), 3)){
counter <- counter +1
dotchart2(cadataframe$rows[,i], labels=rownames(data), sort=FALSE,lty=2, xlim=c(0.0, 1000), xlab=paste("Row categories' contribution to Dim. ",counter," (in permills)"))
abline(v=round(((100/nrows)*10), digits=0), lty=2, col="RED")
}
}
ca.rows.cntr(greenacre_data,1)
ca.rows.cntr(greenacre_data,2)
ca.cols.qlt <- function (data,num.dim){
cadataframe<-summary(ca(data, nd=num.dim))
counter <- 1
for(i in seq(9, ncol(cadataframe$columns), 3)){
counter <- counter +1
quality.cols <- (cadataframe$columns[,6]+cadataframe$columns[,i])/10
dotchart2(quality.cols, labels=colnames(data), sort=FALSE,lty=2, xlim=c(0, 100), xlab=paste("Column categories' quality of the display (% of inertia) on Dim. 1 +", counter))
}
}
ca.cols.qlt(greenacre_data,2)
malinvaud(greenacre_data)
setwd("C:/GMA/GitHub_repos/CAinterprTools")
document()
library(CAinterprTools)
smoke
setwd("C:/GMA/GitHub_repos/CAinterprTools")
library(roxygen2)
library(devtools)
document()
library(CAinterprTools)
data("greenacre_data")
malinvaud(greenacre_data)
ca.rows.cntr(greenacre_data,1)
ca.cols.cntr(greenacre_data,1)
ca.cols.cntr
ca.rows.cntr
ca.cols.corr(greenacre_data,1)
library(ca)
res <- summary(ca(greenacre_data))
res
ca.rows.cntr(greenacre_data,1)
setwd("C:/GMA/GitHub_repos/CAinterprTools")
library(CAinterprTools)
setwd("C:/GMA/GitHub_repos/CAinterprTools")
document()
library(CAinterprTools)
setwd("C:/GMA/GitHub_repos/Packages/CAinterprTools_0.1")
setwd("C:/GMA/GitHub_repos/Packages/CAinterprTools_0.1")
library(devtools)
library(roxygen2)
document()
library(CAinterprTools)
?ca.cols.cntr
data(greenacre_data)
ca.cols.cntr(greenacre_data,1,T)
ca.cols.cntr(greenacre_data,1,F)
setwd("C:/GMA/GitHub_repos/Packages/CAinterprTools_0.2")
library(roxygen2)
library(devtools)
document()
library(CAinterprTools)
library("CAinterprTools", lib.loc="C:/Program Files/R/R-3.1.1/library")
setwd("C:/GMA/GitHub_repos/Packages/CAinterprTools_0.2")
document()
library(CAinterprTools)
library(ca)
data(smoke)
ca.aver.rule(smoke)
ca.cols.contr(smoke,1,T)
ca.cols.cntr(smoke,1,T)
ca.rows.cntr(smoke,1,T)
ca.cols.cntr.scatter(smoke,1,2)
ca.rows.cntr.scatter(smoke,1,2)
ca.rows.corr.scatter(smoke,1,23)
ca.rows.corr.scatter(smoke,1,2)
malinvaud(smoke)
sig.tot.inertia.perm(smoke)
setwd("C:/GMA/GitHub_repos/Packages/CAinterprTools_0.2")
library(devtools)
library(roxygen2)
library(CAinterprTools)
data(greenacre_data)
ca.cols.cntr(scatter(greenacre_data,1,2))
ca.cols.cntr.scatter(greenacre_data,1,2)
ca.cols.cntr.scatter <- function (data, x, y)
{
ncols <- ncol(data)
pnt_labls <- colnames(data)
res <- CA(data, graph=FALSE)
dfr <- data.frame(dim1=res$col$contrib[,x]*10, dim2=res$col$contrib[,y]*10)
xmax <- max(dfr[,1])+10
ymax <- max(dfr[,2])+10
limit <- max(xmax,ymax)
plot(dfr[,1], dfr[,2], pch=19, xlim=c(0,limit), ylim=c(0,limit), xlab=paste("Cols categories' contribution to Dim",x), ylab=paste("Cols categories' contribution to Dim",y))
text(dfr[,1], dfr[,2], labels=pnt_labls, cex= 0.7, pos=3)
abline(0,1)
abline(v = round(((100/ncols) * 10), digits = 0), lty = 2, col = "RED")
abline(h = round(((100/ncols) * 10), digits = 0), lty = 2, col = "RED")
}
ca.cols.cntr.scatter(greenacre_data,1,2)
document()
library(CAinterprTools)
ca.cols.cntr.scatter(greenacre_data,1,2)
ca.cols.cntr(greenacre_data,1,T)
ca.rows.cntr.scatter(greenacre_data,1,2)
ca.cols.corr.scatter(greenacre_data,1,2)
ca.rows.corr.scatter(greenacre_data,1,2)
library(devtools)
library(roxygen2)
setwd("C:/GMA/GitHub_repos/Packages/CAinterprTools_0.3")
document()
library(CAinterprTools)
data(greenacre_data)
ca.rows.cntr(greenacre_data,3,F)
ca.rows.cntr(greenacre_data,3,T)
ca.cols.cntr(greenacre_data,3,F)
ca.cols.cntr(greenacre_data,3,T)
ca.rows.cntr.scatter(greenacre_data,1,2)
ca.cols.cntr.scatter(greenacre_data,1,2)
document()
library(CAinterprTools)
setwd("D:/Rpackages/Packages_laboratory/CAinterprTools_0.4/CAinterprTools")
library("devtools", lib.loc="~/R/win-library/3.1")
library("roxygen2", lib.loc="~/R/win-library/3.1")
ca.corr <- function (data){
mydataasmatrix<-as.matrix(data)
dataframe.after.ca<- summary(ca(data))
perf.corr<-(1.0)
sqr.trace<-round(sqrt(sum(dataframe.after.ca$scree[,2])), digits=3)
barplot(c(perf.corr, sqr.trace), main=paste("Correlation coefficient between rows & columns (=square root of the inertia):", sqr.trace), sub="reference line: threshold of important correlation ", ylab="correlation coeff.", names.arg=c("correlation coeff. range", "correlation coeff. bt rows & cols"), cex.main=0.80, cex.sub=0.80, cex.lab=0.80)
abline(h=0.20)
}
library("CAseriation", lib.loc="~/R/win-library/3.1")
data(perfect_seriation)
ca.corr(perfect_seriation)
library(ca)
data(smoke)
ca.corr(smoke)
cols.corr <- function (data, num.dim)
{
cadataframe <- CA(data, graph = FALSE)
correl.cols <- round(sqrt(cadataframe$col$cos2[, num.dim]),digits = 3)
dotchart2(correl.cols, labels = colnames(data), sort = FALSE, lty = 2, xlim = c(0, 1), xlab = paste("Column categories' correlation with Dim. ",num.dim))
}
cols.corr(smoke,2)
library(Hmisc)
cols.corr(smoke,1)
cols.corr(smoke,2)
smoke
rows.cntr <- function (data, num.dim, cti)
{
nrows <- nrow(data)
cadataframe <- CA(data, graph=FALSE)
dotchart2(cadataframe$row$contrib[, num.dim]*10, labels = rownames(data),sort = FALSE, lty = 2, xlim = c(0, 1000), xlab = paste("Row categories' contribution to Dim. ",num.dim, " (in permills)"))
abline(v = round(((100/nrows) * 10), digits = 0), lty = 2, col = "RED")
if (cti == T) {
res.ca <- summary(ca(data))
dotchart2(res.ca$rows[, 4], pch = 1, xlim = c(0, 1000), add = TRUE)
title(sub = "note: solid circle=contrib. to the dimension; hollow circle=contrib. to the total inertia",
cex.sub = 0.75)
}
}
rows.cntr(smoke,1,F)
rows.cntr(smoke,2,F)
rows.cntr(smoke,2,T)
rows.corr <- function (data, num.dim){
cadataframe <- CA(data, graph = FALSE)
correl.rows <- round(sqrt((cadataframe$row$cos2[,num.dim])), digits=3)
dotchart2(correl.rows, labels=rownames(data), sort=FALSE,lty=2, xlim=c(0.0, 1.0), xlab=paste("Row categories' correlation with Dim. ",counter))
}
rows.corr(smoke,1)
rows.corr <- function (data, num.dim){
cadataframe <- CA(data, graph = FALSE)
correl.rows <- round(sqrt((cadataframe$row$cos2[,num.dim])), digits=3)
dotchart2(correl.rows, labels=rownames(data), sort=FALSE,lty=2, xlim=c(0.0, 1.0), xlab=paste("Row categories' correlation with Dim. ",num.dim))
}
rows.corr(smoke,1)
rows.corr(smoke,2)
summary(ca(smoke))
prova <- CA(smoke, graph=FALSE)
prova
prova$row$cos2
library("CAinterprTools", lib.loc="~/R/win-library/3.1")
data(greenacre_data)
summary(ca(greenacre_data))
prova <- CA(greenacre_data, graph=FALSE)
prova$row$cos2
rows.corr.scatter <- function (data, x, y)
{
pnt_labls <- rownames(data)
res <- CA(data, graph=FALSE)
dfr <- data.frame(dim1=round(sqrt(res$row$cos2[,x]), digits=3), dim2=round(sqrt(res$row$cos2[,y]), digits=3))
plot(dfr[,1], dfr[,2], pch=19, xlim=c(0,1), ylim=c(0,1), xlab=paste("Row categories' correlation with Dim",x), ylab=paste("Row categories' correlation with Dim",y))
text(dfr[,1], dfr[,2], labels=pnt_labls, cex= 0.7, pos=3)
abline(0,1)
}
rows.corr.scatter(smoke,1,2)
rows.corr(smoke,1)
rows.corr(greenacre_data,1)
rows.corr.scatter(greenacre_data,1,2)
cols.corr.scatter <- function (data, x, y)
{
pnt_labls <- colnames(data)
res <- CA(data, graph=FALSE)
dfr <- data.frame(dim1=round(sqrt(res$col$cos2[,x]), digits=3), dim2=round(sqrt(res$col$cos2[,y]), digits=3))
plot(dfr[,1], dfr[,2], pch=19, xlim=c(0,1), ylim=c(0,1), xlab=paste("Cols categories' correlation with Dim",x), ylab=paste("Cols categories' correlation with Dim",y))
text(dfr[,1], dfr[,2], labels=pnt_labls, cex= 0.7, pos=3)
abline(0,1)
}
cols.corr.scatter(greenacre_data,1,2)
cols.corr(greenacre_data,1)
prova$col$cos2
cols.qlt <- function (data,x,y){
cadataframe <- CA(data, graph=FALSE)
quality.cols <- (cadataframe$col$cos2[,x]+cadataframe$col$cos2[,y])
dotchart2(quality.cols, labels=colnames(data), sort=FALSE,lty=2, xlim=c(0, 100), xlab=paste("Column categories' quality of the display (% of inertia) on Dim. 1 +", counter))
}
cols.qlt(greenacre_data,1,2)
cols.qlt <- function (data,x,y){
cadataframe <- CA(data, graph=FALSE)
quality.cols <- (cadataframe$col$cos2[,x]+cadataframe$col$cos2[,y])
dotchart2(quality.cols, labels=colnames(data), sort=FALSE,lty=2, xlim=c(0, 100), xlab=paste("Column categories' quality of the display (% of inertia) on Dim.", x, "+",y)
}
cols.qlt <- function (data,x,y){
cadataframe <- CA(data, graph=FALSE)
quality.cols <- (cadataframe$col$cos2[,x]+cadataframe$col$cos2[,y])
dotchart2(quality.cols, labels=colnames(data), sort=FALSE,lty=2, xlim=c(0, 100), xlab=paste("Column categories' quality of the display (% of inertia) on Dim.", x, "+",y)
}
cols.qlt <- function (data,x,y){
cadataframe <- CA(data, graph=FALSE)
quality.cols <- (cadataframe$col$cos2[,x]+cadataframe$col$cos2[,y])
dotchart2(quality.cols, labels=colnames(data), sort=FALSE,lty=2, xlim=c(0, 100), xlab=paste("Column categories' quality of the display (% of inertia) on Dim.", x, "+",y))
}
cols.qlt(greenacre_data,1,2)
prova$col$cos2
prova$col$cos2[,1]
prova$col$cos2[,1]+prova$col$cos2[,2]
cadataframe <- CA(greenacre_datadata, graph=FALSE)
cadataframe <- CA(greenacre_data, graph=FALSE)
quality.cols <- (cadataframe$col$cos2[,1]+cadataframe$col$cos2[,2])
quality.cols
?dotchart2
cadataframe <- CA(greenacre_data, graph = FALSE)
correl.cols <- round(sqrt(cadataframe$col$cos2[, 1]),digits = 3)
correl.cols
dotchart2(correl.cols, labels = colnames(greenacre_data), sort = FALSE, lty = 2, xlim = c(0, 1), xlab = paste("Column categories' correlation with Dim. ",1))
summary(ca(greenacre_data))
prova$col$cos2
0.574*10
5.74*100
cols.qlt <- function (data,x,y){
cadataframe <- CA(data, graph=FALSE)
quality.cols <- (cadataframe$col$cos2[,x]*100+cadataframe$col$cos2[,y]*100)
dotchart2(quality.cols, labels=colnames(data), sort=FALSE,lty=2, xlim=c(0, 100), xlab=paste("Column categories' quality of the display (% of inertia) on Dim.", x, "+",y))
}
cols.qlt(greenacre_data,1,2)
0.57*100
0.057*100
rows.qlt <- function (data,x,y){
cadataframe <- CA(data, graph=FALSE)
quality.rows <- (cadataframe$row$cos2[,x]*100+cadataframe$row$cos2[,y]*100)
dotchart2(quality.rows, labels=rownames(data), sort=FALSE,lty=2, xlim=c(0, 100), xlab=paste("Row categories' quality of the display (% of inertia) on Dim.", x, "+", y))
}
rows.qlt(greenacre_data,1,2)
rows.qlt(greenacre_data,1,3)
rows.qlt(greenacre_data,2,3)
cols.qlt(greenacre_data,2,3)
cols.cntr(greenacre_data,3,T)
ca.cols.cntr(smoke,2,T)
cols.cntr <- function (data, num.dim, cti)
{
ncols <- ncol(data)
cadataframe <- CA(data, graph=FALSE)
dotchart2(cadataframe$col$contrib[, num.dim]*10, labels = colnames(data),sort = FALSE, lty = 2, xlim = c(0, 1000), xlab = paste("Column categories' contribution to Dim. ",num.dim, " (in permills)"))
abline(v = round(((100/ncols) * 10), digits = 0), lty = 2,col = "RED")
if (cti == T) {
res.ca <- summary(ca(data))
dotchart2(res.ca$columns[, 4], pch = 1, xlim = c(0,1000), add = TRUE)
title(sub = "note: solid circle=contrib. to the dimension; hollow circle=contrib. to the total inertia",
cex.sub = 0.75)
}
}
cols.cntr(smoke,2,T)
cols.cntr(smoke,1,T)
cols.cntr <- function (data, x, cti)
{
ncols <- ncol(data)
cadataframe <- CA(data, graph=FALSE)
dotchart2(cadataframe$col$contrib[, x]*10, labels = colnames(data),sort = FALSE, lty = 2, xlim = c(0, 1000), xlab = paste("Column categories' contribution to Dim. ",x, " (in permills)"))
abline(v = round(((100/ncols) * 10), digits = 0), lty = 2,col = "RED")
if (cti == T) {
res.ca <- summary(ca(data))
dotchart2(res.ca$columns[, 4], pch = 1, xlim = c(0,1000), add = TRUE)
title(sub = "note: solid circle=contrib. to the dimension; hollow circle=contrib. to the total inertia",
cex.sub = 0.75)
}
}
cols.cntr(smoke,3,F)
cols.cntr(smoke,2,T)
cols.corr <- function (data, x)
{
cadataframe <- CA(data, graph = FALSE)
correl.cols <- round(sqrt(cadataframe$col$cos2[, x]),digits = 3)
dotchart2(correl.cols, labels = colnames(data), sort = FALSE, lty = 2, xlim = c(0, 1), xlab = paste("Column categories' correlation with Dim. ",x))
}
cols.corr(smoke,1)
cols.corr(smoke,2)
rows.cntr <- function (data, x, cti)
{
nrows <- nrow(data)
cadataframe <- CA(data, graph=FALSE)
dotchart2(cadataframe$row$contrib[, x]*10, labels = rownames(data),sort = FALSE, lty = 2, xlim = c(0, 1000), xlab = paste("Row categories' contribution to Dim. ",x, " (in permills)"))
abline(v = round(((100/nrows) * 10), digits = 0), lty = 2, col = "RED")
if (cti == T) {
res.ca <- summary(ca(data))
dotchart2(res.ca$rows[, 4], pch = 1, xlim = c(0, 1000), add = TRUE)
title(sub = "note: solid circle=contrib. to the dimension; hollow circle=contrib. to the total inertia",
cex.sub = 0.75)
}
}
rows.cntr(smoke,2,F)
rows.cntr(smoke,1,T)
rows.corr <- function (data, x){
cadataframe <- CA(data, graph = FALSE)
correl.rows <- round(sqrt((cadataframe$row$cos2[,x])), digits=3)
dotchart2(correl.rows, labels=rownames(data), sort=FALSE,lty=2, xlim=c(0.0, 1.0), xlab=paste("Row categories' correlation with Dim. ",x))
}
rows.corr(smoke,1)
rows.corr(smoke,2)
setwd("D:/Rpackages/Packages_laboratory/CAinterprTools_0.4/CAinterprTools")
document()
library(CAinterprTools)
library(CAinterprTools)
?aver.rule
data(greenacre_data)
aver.rule(greenacre_data)
setwd("D:/Rpackages/Packages_laboratory/CAinterprTools_0.4/CAinterprTools")
document()
library(CAinterprTools)
dati <- data(greenacre_data)
dati
data(greenacre_data)
dati <- greenacre_data
dati
aver.rule(dati)
ca.corr(dati)
cols.cntr(dati,1)
cols.cntr(data,1,T)
cols.cntr(dati,1,T)
cols.contr
cols.cntr
summary(ca(dati))
prova<-CA(dati,graph=FALSE)
prova$col$contribut
prova$col$contrib
22.75*10
cols.cntr.scatter(dati,1,2)
cols.qlt(dati,1,2)
malinvaud(dati)
rows.cntr(dati,1,T)
rows.cntr(dati,1,F)
rows.cntr.scatter(dati,1,2)
rows.qlt(dati,1,2)
sig.dim.perm(dati,1,2)
sig.tot.inertia(dati)
sig.tot.inertia.perm(dati)
sig.dim.perm <- function(data,x,y) {
res<-epCA.inference.battery(data, test.iters=999, graphs=FALSE)
#count the number of permuted eigenvalues of the first dimensions that are greater than the observed eigenvalue of the same dimension
first.dim.ratio<-length(which(res$Inference.Data$components$eigs.perm[,x] > res$Inference.Data$components$eigs[x]))
#compute the p value of the first selected dimension
pvalue.first.dim<-round(first.dim.ratio/1000, 5)
#the same applies for the second selected dimension
second.dim.ratio<-length(which(res$Inference.Data$components$eigs.perm[,y] > res$Inference.Data$components$eigs[y]))
pvalue.second.dim<-round(second.dim.ratio/1000,5)
plot(res$Inference.Data$components$eigs.perm[,x], res$Inference.Data$components$eigs.perm[,y], main=" Scatterplot of permuted Dimensions' inertia", sub="solid line: obs. inertia; dashed line: 95 percentile of the permuted distrib. (=alpha 0.05 threshold)", xlab=paste("inertia of permuted", x,"Dim (p=", pvalue.first.dim, ")"), ylab=paste("inertia of permuted", y,"Dim (p=", pvalue.second.dim, ")"))
##add reference lines
#reference lines indicating the 95 percentile of the permuted distribution of the first and second dimensions' inertia
abline(v=quantile(res$Inference.Data$components$eigs.perm[,x], c(0.95)), lty=2, col="blue")
abline(h=quantile(res$Inference.Data$components$eigs.perm[,y], c(0.95)), lty=2, col="blue")
#reference lines indicating the observed inertia of the first two dimensions
abline(v=res$Inference.Data$components$eigs[x])
abline(h=res$Inference.Data$components$eigs[y])
#report some data on the R console
print(paste("p value of dim", x,"=",pvalue.first.dim))
print(paste("p value of dim", y,"=",pvalue.second.dim))
}
sig.dim.perm(dati,1,2)
sig.dim.perm(smoke,1,2)
smoke
setwd("D:/Rpackages/Packages_laboratory/CAinterprTools_0.4/CAinterprTools")
document()
library(CAinterprTools)
?cols.cntr
?cols.cntr.scatter
